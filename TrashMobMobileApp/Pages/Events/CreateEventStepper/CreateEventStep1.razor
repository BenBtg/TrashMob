<style>
    .tm-step1-container {
        height: 100%;
        padding: 20px;
    }

        .tm-step1-container .tm-loader {
            top: 50%;
            position: fixed;
        }

        .tm-step1-container .next-btn {
            margin-top: 10px;
            width: 100%;
        }
</style>

<ErrorBoundary>
    <ChildContent>
        <MudContainer Class="tm-step1-container">
            <MudOverlay @bind-Visible="_isLoading" Absolute>
                <MudProgressCircular Color="Color.Default" Indeterminate Class="tm-loader" />
            </MudOverlay>
            <MudText Typo="Typo.subtitle2">Let's start with the basics.</MudText>
            <MudText Typo="Typo.body2">Choose a name for your event and tell us what type of event it will be.</MudText>
            <MudForm @ref="_step1Form" @bind-IsValid="_success" @bind-Errors="_errors">
                <MudTextField T="string" Style="margin-top: 10px" Label="Name" @bind-Text="Event.Name" Variant="Variant.Outlined" Required RequiredError="Name is required" />
                <MudSelect FullWidth T="EventType" Style="margin-top:10px" Label="Event Type" @bind-Value="@_selectedEventType" AnchorOrigin="Origin.BottomCenter" Variant="Variant.Outlined" Required RequiredError="Event type is required">
                    @foreach (var eventType in _eventTypes)
                    {
                            <MudSelectItem T="EventType" Value="@eventType">@eventType.Name</MudSelectItem>
                    }
                </MudSelect>
                <MudFab Class="next-btn" Color="Color.Primary" Label="Next" OnClick="OnStepFinishedAsync" />
            </MudForm>
        </MudContainer>
    </ChildContent>
    <ErrorContent>
        @context.Message
    </ErrorContent>
</ErrorBoundary>
